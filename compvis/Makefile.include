#################################################################
## The IPP environment variable is taken from the environment  ##
## You should include in your .bashrc something like:          ##
##                                                             ##
## export IPP=/opt/intel/ipp/5.3/ia32                          ##
## export LD_LIBRARY_PATH=$IPP/sharedlib                       ##
##                                                             ##
## in 64 bit machines you may also need:                       ##
##                                                             ##
## export IPPS=em64t                                           ##
##                                                             ##
#################################################################

# required in ghc-6.10.1 for hsc2hs
GHCINC = $(HOME)/apps/ghc/lib/ghc-6.10.1/include

EVLIB = $(EASYVISION)/lib/

CDIR = $(EVLIB)/ImagProc/Ipp

CONTRIBPATH = $(EVLIB)/ImagProc/C
CONTRIB = $(CONTRIBPATH)/Simple/simple.o        \
          $(CONTRIBPATH)/Segments/Structs.hs    \
          $(CONTRIBPATH)/Segments/libsegments.a \
          $(CONTRIBPATH)/Burns.hs               \
          $(CONTRIBPATH)/Burns/burns.o

LIBS = -i$(EVLIB)  -I$(IPP)/include \
       $(CDIR)/auxIpp.o $(CDIR)/adapt.o \
       $(CONTRIBPATH)/Simple/simple.o \
       $(CONTRIBPATH)/Segments/libsegments.a \
       $(CONTRIBPATH)/Burns/burns.o \
       -L$(IPP)/sharedlib -lguide -lippcore$(IPPS) -lippi$(IPPS)\
       -lipps$(IPPS) -lippcc$(IPPS) -lippvc$(IPPS) -lippcv$(IPPS)

all: $(ALL) 

%: %.hs auxc
	@ghc -O2 -threaded --make $< -o $@ $(LIBS)

auxc: $(CDIR)/auxIpp.o $(CDIR)/adapt.o $(CDIR)/Structs.hs \
      $(CONTRIB)

$(CDIR)/Structs.hs: $(CDIR)/Structs.hsc
	hsc2hs -I$(IPP)/include -I$(GHCINC) $(CDIR)/Structs.hsc

$(CDIR)/auxIpp.o: $(CDIR)/auxIpp.c $(CDIR)/auxIpp.h
	gcc -O4 -c -I$(IPP)/include $(CDIR)/auxIpp.c -o $(CDIR)/auxIpp.o

$(CDIR)/adapt.o: $(CDIR)/adapt.c $(CDIR)/adapt.h
	gcc -O4 -c -I$(IPP)/include $(CDIR)/adapt.c -o $(CDIR)/adapt.o

$(CDIR)/adapt.c: $(CDIR)/adapter.hs $(CDIR)/Parser.hs $(CDIR)/functions.txt
	cd $(CDIR); ghc -O --make adapter; ./adapter;


$(CONTRIBPATH)/Simple/simple.o: $(CONTRIBPATH)/Simple/simple.c $(CONTRIBPATH)/Simple/simple.h
	gcc -O4 -c $(CONTRIBPATH)/Simple/simple.c -o $(CONTRIBPATH)/Simple/simple.o

$(CONTRIBPATH)/Segments/Structs.hs: $(CONTRIBPATH)/Segments/Structs.hsc
	hsc2hs -I$(IPP)/include -I$(GHCINC) $(CONTRIBPATH)/Segments/Structs.hsc

$(CONTRIBPATH)/Segments/libsegments.a:
	cd $(CONTRIBPATH)/Segments/; make

$(CONTRIBPATH)/Burns.hs: $(CONTRIBPATH)/Burns.hsc
	hsc2hs -I$(IPP)/include -I$(GHCINC) $(CONTRIBPATH)/Burns.hsc

$(CONTRIBPATH)/Burns/burns.o: $(CONTRIBPATH)/Burns/burns.c $(CONTRIBPATH)/Burns/burns.h
	gcc -O0 -c -I$(IPP)/include $(CONTRIBPATH)/Burns/burns.c -o $(CONTRIBPATH)/Burns/burns.o


clean:
	rm -f $(ALL) *.o *.hi

cleanall: clean
	cd $(CONTRIBPATH)/Segments/; make clean
	rm -f $(CONTRIBPATH)/Burns.hs
	cd $(CDIR); rm -f Structs.hs adapt.c adapt.h Adapt.hs Auto.hs adapter
	rm `find $(EVLIB) -name "*.o" -o -name "*.hi"`
