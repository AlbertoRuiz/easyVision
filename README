You need the GNU Scientific Library (http://www.gnu.org/software/gsl).
For instance, in a Fedora Core Linux system you can:

# yum install gsl gsl-devel

The first time (or if you change GSL/gslaux.c or GSL/gslaux.h) you must run:

$ ./setup

It may be necessary to make it executable:

$ chmod u+x setup

You should also run ./setup after darcs pull.

Other required packages (for a Fedora Core Linux distribution):

xorg-x11-devel
freeglut-devel

The performance of some linear algebra computations significantly increases using ATLAS
(http://math-atlas.sourceforge.net/).

For Fedora Core 4 you can directly 

# yum install atlas

or better:

# yum install octave

which requires atlas, fftw, gnuplot, etc.

If your distribution does not have an atlas package you can download precompiled 
libraries from https://sourceforge.net/project/showfiles.php?group_id=23725

COMMAND LINE EXAMPLES
---------------------

Interactive:

$ ghci demo.hs GSL/gslaux.o -lgslcblas -lgsl -lGL

With Atlas optimization, Fedora Core 4:

We need a symbolic link to the dynamic library:
$ ln -s /usr/lib/atlas/libcblas.so.3 libcblas.so

$ ghci demo.hs GSL/gslaux.o -L. -lcblas -lgsl -lGL

Compiled:

$ ghc --make demo.hs GSL/gslaux.o -lgslcblas -lgsl

Compiled using the static libraries downloaded from the home page:

$ LIBATLAS=/path/to/atlas/lib
$ ghc --make <yourprog.hs> GSL/gslaux.o -L$LIBATLAS -lcblas /usr/lib/libgsl.a -latlas

You can alternatively link with GSL/debuggslaux.o to "printf" the
C wrappers that are used by your program, with timing information.

ACKNOWLEDGEMENTS
----------------

The author thanks all the people in the Haskell mailing lists for their help.

- Nico Mahlo discovered a bug in the eigendecomposition wrapper.
